import { ethers } from 'ethers';
import App from '../../entities/App';
import { Transaction } from '../transactions';
interface PathData {
    forwardingFeePretransaction?: Transaction;
    path: Transaction[];
}
/**
 * Calculate the transaction path for a transaction to `destination`
 * that invokes `methodSignature` with `params`.
 *
 */
export declare function calculateTransactionPath(sender: string, destination: string, methodSignature: string, params: any[], apps: App[], provider: ethers.providers.Provider, finalForwarder?: string): Promise<PathData>;
export {};
//# sourceMappingURL=calculatePath.d.ts.map