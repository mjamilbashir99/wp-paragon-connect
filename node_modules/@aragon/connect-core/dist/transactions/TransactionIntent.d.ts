import { ethers } from 'ethers';
import TransactionPath from './TransactionPath';
import TransactionRequest from './TransactionRequest';
import Organization from '../entities/Organization';
export interface TransactionIntentData {
    contractAddress: string;
    functionName: string;
    functionArgs: any[];
}
export default class TransactionIntent {
    #private;
    readonly contractAddress: string;
    readonly functionName: string;
    readonly functionArgs: any[];
    constructor(data: TransactionIntentData, org: Organization, provider: ethers.providers.Provider);
    paths(account: string, options?: {
        as?: string;
        path?: string[];
    }): Promise<TransactionPath>;
    transactions(account: string, options?: {
        as: string;
        path?: string[];
    }): Promise<TransactionRequest[]>;
}
//# sourceMappingURL=TransactionIntent.d.ts.map