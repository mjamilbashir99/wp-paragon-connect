import CoreEntity from './CoreEntity';
import Permission, { PermissionData } from './Permission';
import { Metadata } from '../types';
import { ConnectorInterface } from '../connections/ConnectorInterface';
export interface RoleData {
    appAddress: string;
    appId: string;
    artifact?: string | null;
    contentUri?: string | null;
    hash: string;
    manager?: string;
    grantees?: PermissionData[] | null;
}
export default class Role extends CoreEntity {
    readonly appAddress: string;
    readonly appId: string;
    readonly description?: string;
    readonly hash: string;
    readonly params?: string[];
    readonly permissions?: Permission[] | null;
    readonly manager?: string;
    readonly name?: string;
    constructor(data: RoleData, metadata: Metadata, connector: ConnectorInterface);
    static create(data: RoleData, connector: ConnectorInterface): Promise<Role>;
}
//# sourceMappingURL=Role.d.ts.map