import CoreEntity from './CoreEntity';
import { AragonArtifact, AragonManifest, Metadata, AragonArtifactRole } from '../types';
import { ConnectorInterface } from '../connections/ConnectorInterface';
export interface RepoData {
    address: string;
    artifact?: string | null;
    contentUri?: string | null;
    name: string;
    manifest?: string | null;
    registry?: string | null;
    registryAddress?: string | null;
}
export default class Repo extends CoreEntity {
    #private;
    readonly address: string;
    readonly contentUri?: string;
    readonly name: string;
    readonly registry?: string | null;
    readonly registryAddress?: string | null;
    constructor(data: RepoData, metadata: Metadata, connector: ConnectorInterface);
    static create(data: RepoData, connector: ConnectorInterface): Promise<Repo>;
    get artifact(): AragonArtifact;
    get manifest(): AragonManifest;
    get roles(): AragonArtifactRole[];
}
//# sourceMappingURL=Repo.d.ts.map