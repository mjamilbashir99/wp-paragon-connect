import { AppFilters } from '@aragon/connect-types';
import { App, Repo, Role } from '..';
import Permission from '../entities/Permission';
import { ConnectorInterface } from './ConnectorInterface';
export declare type ConnectorJsonConfig = {
    permissions: Permission[];
};
declare class ConnectorJson implements ConnectorInterface {
    #private;
    constructor({ permissions }: ConnectorJsonConfig);
    permissionsForOrg(): Promise<Permission[]>;
    onPermissionsForOrg(orgAddress: string, callback: Function): {
        unsubscribe: Function;
    };
    app(filters: AppFilters): Promise<App>;
    apps(filters: AppFilters): Promise<App[]>;
    appForOrg(orgAddress: string): Promise<App>;
    appsForOrg(orgAddress: string): Promise<App[]>;
    onAppForOrg(orgAddress: string, filters: AppFilters, callback: Function): {
        unsubscribe: Function;
    };
    onAppsForOrg(orgAddress: string, filters: AppFilters, callback: Function): {
        unsubscribe: Function;
    };
    repoForApp(appAddress: string): Promise<Repo>;
    appByAddress(appAddress: string): Promise<App>;
    rolesForAddress(appAddress: string): Promise<Role[]>;
}
export default ConnectorJson;
//# sourceMappingURL=ConnectorJson.d.ts.map