import Entity from "./VotingEntity";
import Cast from './Cast';
import VotingConnectorTheGraph from "../connector";
export interface VoteData {
    id: string;
    creator: string;
    metadata: string;
    executed: boolean;
    startDate: string;
    snapshotBlock: string;
    supportRequiredPct: string;
    minAcceptQuorum: string;
    yea: string;
    nay: string;
    votingPower: string;
    script: string;
}
export default class Vote extends Entity implements VoteData {
    readonly id: string;
    readonly creator: string;
    readonly metadata: string;
    readonly executed: boolean;
    readonly startDate: string;
    readonly snapshotBlock: string;
    readonly supportRequiredPct: string;
    readonly minAcceptQuorum: string;
    readonly yea: string;
    readonly nay: string;
    readonly votingPower: string;
    readonly script: string;
    constructor(data: VoteData, connector: VotingConnectorTheGraph);
    casts({ first, skip }?: {
        first?: number | undefined;
        skip?: number | undefined;
    }): Promise<Cast[]>;
    onCasts(callback: Function): {
        unsubscribe: Function;
    };
}
//# sourceMappingURL=Vote.d.ts.map