import { AppFilters } from '@aragon/connect-types';
import { ConnectorInterface, Permission, App, Repo, Role } from '@aragon/connect-core';
export declare type ConnectorEthereumConfig = object;
declare class ConnectorEthereum implements ConnectorInterface {
    constructor(config?: ConnectorEthereumConfig);
    permissionsForOrg(): Promise<Permission[]>;
    onPermissionsForOrg(orgAddress: string, callback: Function): {
        unsubscribe: Function;
    };
    appForOrg(orgAddress: string, filters: AppFilters): Promise<App>;
    appsForOrg(orgAddress: string, filters: AppFilters): Promise<App[]>;
    onAppForOrg(orgAddress: string, filters: AppFilters, callback: Function): {
        unsubscribe: Function;
    };
    onAppsForOrg(orgAddress: string, filters: AppFilters, callback: Function): {
        unsubscribe: Function;
    };
    repoForApp(appAddress: string): Promise<Repo>;
    appByAddress(appAddress: string): Promise<App>;
    rolesForAddress(appAddress: string): Promise<Role[]>;
    app(filters: AppFilters): Promise<App>;
    apps(filters: AppFilters): Promise<App[]>;
}
export default ConnectorEthereum;
//# sourceMappingURL=index.d.ts.map