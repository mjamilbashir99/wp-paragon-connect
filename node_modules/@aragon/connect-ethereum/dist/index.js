"use strict";
// TODO: Remove these linting exceptions after implementation.
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/no-empty-function */
/* eslint-disable @typescript-eslint/explicit-function-return-type */
Object.defineProperty(exports, "__esModule", { value: true });
class ConnectorEthereum {
    constructor(config = {}) { }
    async permissionsForOrg() {
        return new Promise(resolve => {
            resolve([]);
        });
    }
    onPermissionsForOrg(orgAddress, callback) {
        return {
            unsubscribe: () => { },
        };
    }
    appForOrg(orgAddress, filters) {
        return new Promise(resolve => {
            resolve();
        });
    }
    appsForOrg(orgAddress, filters) {
        return new Promise(resolve => {
            resolve([]);
        });
    }
    onAppForOrg(orgAddress, filters, callback) {
        return {
            unsubscribe: () => { },
        };
    }
    onAppsForOrg(orgAddress, filters, callback) {
        return {
            unsubscribe: () => { },
        };
    }
    repoForApp(appAddress) {
        return new Promise(resolve => {
            resolve();
        });
    }
    appByAddress(appAddress) {
        return new Promise(resolve => {
            resolve();
        });
    }
    rolesForAddress(appAddress) {
        return new Promise(resolve => {
            resolve([]);
        });
    }
    async app(filters) {
        return this.appByAddress('');
    }
    async apps(filters) {
        return [];
    }
}
exports.default = ConnectorEthereum;
//# sourceMappingURL=index.js.map