"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.APP_FRAGMENT = exports.REPO_FRAGMENT = exports.VERSION_FRAGMENT = exports.ROLE_FRAGMENT = exports.PERMISSION_FRAGMENT = void 0;
const graphql_tag_1 = __importDefault(require("graphql-tag"));
exports.PERMISSION_FRAGMENT = graphql_tag_1.default `
  fragment Permission_permission on Permission {
    appAddress
    allowed
    granteeAddress
    roleHash
    params {
      argumentId
      operationType
      argumentValue
    }
  }
`;
exports.ROLE_FRAGMENT = graphql_tag_1.default `
  fragment Role_role on Role {
    roleHash
    manager
    appAddress
    grantees {
      ...Permission_permission
    }
  }
  ${exports.PERMISSION_FRAGMENT}
`;
exports.VERSION_FRAGMENT = graphql_tag_1.default `
  fragment Version_version on Version {
    semanticVersion
    codeAddress
    contentUri
    artifact
    manifest
  }
`;
exports.REPO_FRAGMENT = graphql_tag_1.default `
  fragment Repo_repo on Repo {
    address
    name
    node
    registry {
      address
    }
    lastVersion {
      ...Version_version
    }
    versions {
      ...Version_version
    }
  }
  ${exports.VERSION_FRAGMENT}
`;
exports.APP_FRAGMENT = graphql_tag_1.default `
  fragment App_app on App {
    address
    appId
    isForwarder
    isUpgradeable
    repoName
    implementation {
      address
    }
    organization {
      address
    }
    version {
      ...Version_version
    }
    repo {
      ...Repo_repo
    }
    roles {
      ...Role_role
    }
  }
  ${ /* VERSION_FRAGMENT is already included in REPO_FRAGMENT */''}
  ${exports.REPO_FRAGMENT}
  ${exports.ROLE_FRAGMENT}
`;
//# sourceMappingURL=fragments.js.map