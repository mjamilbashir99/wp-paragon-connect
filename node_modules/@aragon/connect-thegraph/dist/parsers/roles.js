"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseRoles = exports.parseRole = void 0;
const connect_core_1 = require("@aragon/connect-core");
async function _parseRole(role, app, connector) {
    var _a, _b;
    const grantees = (role === null || role === void 0 ? void 0 : role.grantees) && (role === null || role === void 0 ? void 0 : role.grantees.map((permission) => {
        return {
            appAddress: permission.appAddress,
            allowed: permission.allowed,
            granteeAddress: permission.granteeAddress,
            params: permission.params.map((param) => {
                return {
                    argumentId: param.argumentId,
                    operationType: param.operationType,
                    argumentValue: param.argumentValue,
                };
            }) || [],
            roleHash: permission.roleHash,
        };
    }));
    const roleData = {
        appAddress: role.appAddress,
        manager: role.manager,
        hash: role.roleHash,
        grantees,
        appId: app.appId,
        artifact: (_a = app.version) === null || _a === void 0 ? void 0 : _a.artifact,
        contentUri: (_b = app.version) === null || _b === void 0 ? void 0 : _b.contentUri,
    };
    return connect_core_1.Role.create(roleData, connector);
}
async function parseRole(result, connector) {
    const app = result.data.app;
    const role = result.data.role;
    if (!role) {
        throw new Error('Unable to parse role.');
    }
    return _parseRole(role, app, connector);
}
exports.parseRole = parseRole;
async function parseRoles(result, connector) {
    const app = result.data.app;
    const roles = app === null || app === void 0 ? void 0 : app.roles;
    if (!roles) {
        throw new Error('Unable to parse roles.');
    }
    return Promise.all(roles.map(async (role) => {
        return _parseRole(role, app, connector);
    }));
}
exports.parseRoles = parseRoles;
//# sourceMappingURL=roles.js.map