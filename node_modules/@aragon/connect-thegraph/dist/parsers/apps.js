"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseApps = exports.parseApp = void 0;
const connect_core_1 = require("@aragon/connect-core");
async function _parseApp(app, connector) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
    const data = {
        address: app.address,
        appId: app.appId,
        artifact: (_a = app.version) === null || _a === void 0 ? void 0 : _a.artifact,
        codeAddress: app.implementation.address,
        contentUri: (_b = app.version) === null || _b === void 0 ? void 0 : _b.contentUri,
        isForwarder: app.isForwarder,
        isUpgradeable: app.isUpgradeable,
        kernelAddress: (_c = app.organization) === null || _c === void 0 ? void 0 : _c.address,
        manifest: (_d = app.version) === null || _d === void 0 ? void 0 : _d.manifest,
        name: app.repoName,
        registry: (_f = (_e = app.repo) === null || _e === void 0 ? void 0 : _e.registry) === null || _f === void 0 ? void 0 : _f.name,
        registryAddress: (_h = (_g = app.repo) === null || _g === void 0 ? void 0 : _g.registry) === null || _h === void 0 ? void 0 : _h.address,
        repoAddress: (_j = app.repo) === null || _j === void 0 ? void 0 : _j.address,
        version: (_k = app.version) === null || _k === void 0 ? void 0 : _k.semanticVersion.replace(/,/g, '.'),
    };
    return connect_core_1.App.create(data, connector);
}
async function parseApp(result, connector) {
    const app = result.data.app;
    if (!app) {
        throw new Error('Unable to parse app.');
    }
    return _parseApp(app, connector);
}
exports.parseApp = parseApp;
async function parseApps(result, connector) {
    const org = result.data.organization;
    const apps = org === null || org === void 0 ? void 0 : org.apps;
    if (!apps) {
        throw new Error('Unable to parse apps.');
    }
    return Promise.all(apps.map(async (app) => {
        return _parseApp(app, connector);
    }));
}
exports.parseApps = parseApps;
//# sourceMappingURL=apps.js.map