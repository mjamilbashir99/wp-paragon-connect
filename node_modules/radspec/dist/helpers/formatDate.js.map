{"version":3,"sources":["../../src/helpers/formatDate.js"],"names":["dayjs","extend","advancedFormat","timestamp","format","type","value","Date"],"mappings":"iTAGAA,eAAMC,MAAN,CAAaC,uBAAb,C,cAEe,IACb;;;;;;;KAQA,MAAOC,SAAP,CAAkBC,MAAM,CAAG,cAA3B,IACG,CACCC,IAAI,CAAE,QADP,CAECC,KAAK,CAAE,mBAAM,GAAIC,CAAAA,IAAJ,CAA6B,GAApB,EAAOJ,SAAhB,CAAN,EAA0CC,MAA1C,CAAiDA,MAAjD,CAFR,CADH,C","sourcesContent":["import dayjs from 'dayjs'\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\n\ndayjs.extend(advancedFormat)\n\nexport default () =>\n  /**\n   * Format a timestamp as a string\n   *\n   * @param {*} timestamp Unix timestamp in seconds\n   * @param {string} [format='MMM. Do YYYY'] Format for the date, defaults to a format like \"Jan. 1st 2000\"\n   *\n   * @return {Promise<radspec/evaluator/TypedValue>}\n   */\n  async (timestamp, format = 'MMM. Do YYYY') =>\n    ({\n      type: 'string',\n      value: dayjs(new Date(Number(timestamp) * 1000)).format(format)\n    })\n"],"file":"formatDate.js"}