{"version":3,"sources":["../../src/helpers/fromHex.js"],"names":["hex","to","type","value","BigNumber","from","toNumber","ethers","utils","toUtf8String"],"mappings":"kIAEe,IACb;;;;;;KAOA,CAACA,GAAD,CAAMC,EAAE,CAAG,MAAX,IAAuB,CACrBC,IAAI,CAAE,QADe,CAErBC,KAAK,CACI,QAAP,GAAAF,EAAE,CACEG,kBAAUC,IAAV,CAAeL,GAAf,EAAoBM,QAApB,EADF,CAEEC,eAAOC,KAAP,CAAaC,YAAb,CAA0BT,GAA1B,CALe,CAAvB,C","sourcesContent":["import { ethers, BigNumber } from 'ethers'\n\nexport default () =>\n  /**\n   * Returns the string representation of a given hex value\n   *\n   * @param {string} hex The hex string\n   * @param {string} [to='utf8'] The type to convert the hex from (supported types: 'utf8', 'number')\n   * @return {radspec/evaluator/TypedValue}\n   */\n  (hex, to = 'utf8') => ({\n    type: 'string',\n    value:\n      to === 'number'\n        ? BigNumber.from(hex).toNumber()\n        : ethers.utils.toUtf8String(hex)\n  })\n"],"file":"fromHex.js"}