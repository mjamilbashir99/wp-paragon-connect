{"id":"node_modules/radspec/dist/helpers/HelperManager.js","dependencies":[{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\HelperManager.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\xampp\\htdocs\\aragon-connect\\package.json","includedInParent":true,"mtime":1595855422975},{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\package.json","includedInParent":true,"mtime":1595838173348}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;/**\n * @module radspec/helpers/HelperManager\n */ /**\n * Class for managing the execution of helper functions\n *\n * @class HelperManager\n * @param {Object} availableHelpers Defined helpers\n */class HelperManager{constructor(availableHelpers={}){this.availableHelpers=availableHelpers}/**\n   * Does a helper exist\n   *\n   * @param  {string} helper Helper name\n   * @return {bool}\n   */exists(helper){return!!this.availableHelpers[helper]}/**\n   * Execute a helper with some inputs\n   *\n   * @param  {string} helper Helper name\n   * @param  {Array<radspec/evaluator/TypedValue>} inputs\n   * @param  {Object} config Configuration for running helper\n   * @param {ethers.providers.Provider} config.provider Current provider\n   * @param  {radspec/evaluator/Evaluator} config.evaluator Current evaluator\n   * @return {Promise<radspec/evaluator/TypedValue>}\n   */execute(helper,inputs,{provider,evaluator}){// pass values directly\nreturn inputs=inputs.map(input=>input.value),this.availableHelpers[helper](provider,evaluator)(...inputs)}/**\n   * Get all registered helpers as a key-value mapping\n   *\n   * @return {Object}\n   */getHelpers(){return this.availableHelpers}}exports.default=HelperManager;\n"},"sourceMaps":{"js":{"version":3,"sources":["../../src/helpers/HelperManager.js"],"names":["HelperManager","constructor","availableHelpers","exists","helper","execute","inputs","provider","evaluator","map","input","value","getHelpers"],"mappings":"2FAAA;;IAIA;;;;;GAMe,KAAMA,CAAAA,aAAc,CACjCC,WAAW,CAAEC,gBAAgB,CAAG,EAArB,CAAyB,CAClC,KAAKA,gBAAL,CAAwBA,gBACzB,CAED;;;;;KAMAC,MAAM,CAAEC,MAAF,CAAU,CACd,MAAO,CAAC,CAAC,KAAKF,gBAAL,CAAsBE,MAAtB,CACV,CAED;;;;;;;;;KAUAC,OAAO,CAAED,MAAF,CAAUE,MAAV,CAAkB,CAAEC,QAAF,CAAYC,SAAZ,CAAlB,CAA2C,CACJ;AAC5C,MADAF,CAAAA,MAAM,CAAGA,MAAM,CAACG,GAAP,CAAYC,KAAD,EAAWA,KAAK,CAACC,KAA5B,CACT,CAAO,KAAKT,gBAAL,CAAsBE,MAAtB,EAA8BG,QAA9B,CAAwCC,SAAxC,EAAmD,GAAGF,MAAtD,CACR,CAED;;;;KAKAM,UAAU,EAAI,CACZ,MAAO,MAAKV,gBACb,CArCgC,C","sourcesContent":["/**\n * @module radspec/helpers/HelperManager\n */\n\n/**\n * Class for managing the execution of helper functions\n *\n * @class HelperManager\n * @param {Object} availableHelpers Defined helpers\n */\nexport default class HelperManager {\n  constructor (availableHelpers = {}) {\n    this.availableHelpers = availableHelpers\n  }\n\n  /**\n   * Does a helper exist\n   *\n   * @param  {string} helper Helper name\n   * @return {bool}\n   */\n  exists (helper) {\n    return !!this.availableHelpers[helper]\n  }\n\n  /**\n   * Execute a helper with some inputs\n   *\n   * @param  {string} helper Helper name\n   * @param  {Array<radspec/evaluator/TypedValue>} inputs\n   * @param  {Object} config Configuration for running helper\n   * @param {ethers.providers.Provider} config.provider Current provider\n   * @param  {radspec/evaluator/Evaluator} config.evaluator Current evaluator\n   * @return {Promise<radspec/evaluator/TypedValue>}\n   */\n  execute (helper, inputs, { provider, evaluator }) {\n    inputs = inputs.map((input) => input.value) // pass values directly\n    return this.availableHelpers[helper](provider, evaluator)(...inputs)\n  }\n\n  /**\n   * Get all registered helpers as a key-value mapping\n   *\n   * @return {Object}\n   */\n  getHelpers () {\n    return this.availableHelpers\n  }\n}\n"],"file":"HelperManager.js"}},"error":null,"hash":"4d918052d6f3a5a5afb48ae926b424bc","cacheData":{"env":{}}}