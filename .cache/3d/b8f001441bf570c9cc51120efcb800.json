{"id":"node_modules/@aragon/connect-thegraph/dist/core/GraphQLWrapper.js","dependencies":[{"name":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-thegraph\\dist\\core\\GraphQLWrapper.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\xampp\\htdocs\\test_wp\\package.json","includedInParent":true,"mtime":1595855422975},{"name":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-thegraph\\package.json","includedInParent":true,"mtime":1595838173348},{"name":"isomorphic-unfetch","loc":{"line":20,"column":53},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-thegraph\\dist\\core\\GraphQLWrapper.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\isomorphic-unfetch\\browser.js"},{"name":"isomorphic-ws","loc":{"line":21,"column":48},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-thegraph\\dist\\core\\GraphQLWrapper.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\isomorphic-ws\\browser.js"},{"name":"@urql/core","loc":{"line":22,"column":23},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-thegraph\\dist\\core\\GraphQLWrapper.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@urql\\core\\dist\\urql-core.mjs"},{"name":"subscriptions-transport-ws","loc":{"line":23,"column":45},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-thegraph\\dist\\core\\GraphQLWrapper.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\subscriptions-transport-ws\\dist\\client.js"},{"name":"wonka","loc":{"line":24,"column":24},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-thegraph\\dist\\core\\GraphQLWrapper.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\wonka\\dist\\wonka.mjs"}],"generated":{"js":"\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _client, _verbose;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isomorphic_unfetch_1 = __importDefault(require(\"isomorphic-unfetch\"));\nconst isomorphic_ws_1 = __importDefault(require(\"isomorphic-ws\"));\nconst core_1 = require(\"@urql/core\");\nconst subscriptions_transport_ws_1 = require(\"subscriptions-transport-ws\");\nconst wonka_1 = require(\"wonka\");\nclass GraphQLWrapper {\n    constructor(subgraphUrl, verbose = false) {\n        _client.set(this, void 0);\n        _verbose.set(this, void 0);\n        if (!subgraphUrl || !subgraphUrl.startsWith('http')) {\n            throw new Error('Please provide a valid subgraph URL');\n        }\n        const subscriptionClient = new subscriptions_transport_ws_1.SubscriptionClient(subgraphUrl.replace('http', 'ws'), {\n            reconnect: true,\n            timeout: 20000,\n        }, isomorphic_ws_1.default);\n        __classPrivateFieldSet(this, _client, new core_1.Client({\n            maskTypename: true,\n            url: subgraphUrl,\n            fetch: isomorphic_unfetch_1.default,\n            exchanges: [\n                ...core_1.defaultExchanges,\n                core_1.subscriptionExchange({\n                    forwardSubscription: (operation) => subscriptionClient.request(operation),\n                }),\n            ],\n        }));\n        __classPrivateFieldSet(this, _verbose, verbose);\n    }\n    subscribeToQuery(query, args = {}, callback) {\n        const request = core_1.createRequest(query, args);\n        return wonka_1.pipe(__classPrivateFieldGet(this, _client).executeSubscription(request), wonka_1.subscribe((result) => {\n            if (__classPrivateFieldGet(this, _verbose)) {\n                console.log(this.describeQueryResult(result));\n            }\n            if (result.error) {\n                throw new Error([\n                    'Error performing subscription.',\n                    `${result.error.name}: ${result.error.message}`,\n                    this.describeQueryResult(result),\n                ].join('\\n'));\n            }\n            callback(result);\n        }));\n    }\n    subscribeToQueryWithParser(query, args = {}, callback, parser) {\n        return this.subscribeToQuery(query, args, async (result) => {\n            callback(await this.parseQueryResult(parser, result));\n        });\n    }\n    async performQuery(query, args = {}) {\n        const result = await __classPrivateFieldGet(this, _client).query(query, args).toPromise();\n        if (__classPrivateFieldGet(this, _verbose)) {\n            console.log(this.describeQueryResult(result));\n        }\n        if (result.error) {\n            throw new Error(this.describeQueryResultError(result) + this.describeQueryResult(result));\n        }\n        return result;\n    }\n    async performQueryWithParser(query, args = {}, parser) {\n        const result = await this.performQuery(query, args);\n        return this.parseQueryResult(parser, result);\n    }\n    async parseQueryResult(parser, result) {\n        try {\n            return parser(result, this);\n        }\n        catch (error) {\n            throw new Error(error.message + '\\n\\n' + this.describeQueryResult(result));\n        }\n    }\n    describeQueryResultError(result) {\n        if (!result.error) {\n            return '';\n        }\n        return `${result.error.name}: ${result.error.message}\\n\\n`;\n    }\n    describeQueryResult(result) {\n        var _a;\n        const queryStr = (_a = result.operation.query.loc) === null || _a === void 0 ? void 0 : _a.source.body;\n        const dataStr = JSON.stringify(result.data, null, 2);\n        const argsStr = JSON.stringify(result.operation.variables, null, 2);\n        const subgraphUrl = result.operation.context.url;\n        return [\n            `Subgraph: ${subgraphUrl}`,\n            `Arguments: ${argsStr}`,\n            `Query: ${queryStr}`,\n            `Returned data: ${dataStr}`,\n        ].join('\\n\\n');\n    }\n}\nexports.default = GraphQLWrapper;\n_client = new WeakMap(), _verbose = new WeakMap();\n"},"sourceMaps":{"js":{"version":3,"file":"GraphQLWrapper.js","sourceRoot":"","sources":["../../src/core/GraphQLWrapper.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"625627d4a58401d3dea487bd01d15b90","cacheData":{"env":{}}}