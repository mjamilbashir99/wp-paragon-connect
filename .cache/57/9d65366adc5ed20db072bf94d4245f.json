{"id":"node_modules/radspec/dist/lib/index.js","dependencies":[{"name":"C:\\xampp\\htdocs\\test_wp\\node_modules\\radspec\\dist\\lib\\index.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\xampp\\htdocs\\test_wp\\package.json","includedInParent":true,"mtime":1595855422975},{"name":"C:\\xampp\\htdocs\\test_wp\\node_modules\\radspec\\package.json","includedInParent":true,"mtime":1595838173348},{"name":"../evaluator","loc":{"line":1,"column":123},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\radspec\\dist\\lib\\index.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\radspec\\dist\\evaluator\\index.js"},{"name":"../parser","loc":{"line":1,"column":155},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\radspec\\dist\\lib\\index.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\radspec\\dist\\parser\\index.js"},{"name":"../scanner","loc":{"line":1,"column":185},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\radspec\\dist\\lib\\index.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\radspec\\dist\\scanner\\index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.evaluateRaw=evaluateRaw;var _evaluator=require(\"../evaluator\"),_parser=require(\"../parser\"),_scanner=require(\"../scanner\");/**\n * Evaluate a radspec expression with manual bindings.\n *\n * @example\n * import radspec from 'radspec'\n *\n * radspec.evaluateRaw('a is `a`', {\n *   a: { type: 'int256', value: 10 }\n * }).then(console.log)\n * @param  {string} source The radspec expression\n * @param  {Bindings} bindings An object of bindings and their values\n * @param {?Object} evaluatorOptions An options object for the evaluator (see Evaluator)\n * @return {Promise<string>} The result of the evaluation\n */function evaluateRaw(source,bindings,evaluatorOptions){return(0,_scanner.scan)(source).then(_parser.parse).then(ast=>(0,_evaluator.evaluate)(ast,bindings,evaluatorOptions))}\n"},"sourceMaps":{"js":{"version":3,"sources":["../../src/lib/index.js"],"names":["evaluateRaw","source","bindings","evaluatorOptions","then","parse","ast"],"mappings":"uMAIA;;;;;;;;;;;;;GAcO,QAASA,CAAAA,WAAT,CAAsBC,MAAtB,CAA8BC,QAA9B,CAAwCC,gBAAxC,CAA0D,CAC/D,MAAO,kBAAKF,MAAL,EACJG,IADI,CACCC,aADD,EAEJD,IAFI,CAEEE,GAAD,EAAS,wBAASA,GAAT,CAAcJ,QAAd,CAAwBC,gBAAxB,CAFV,CAGR","sourcesContent":["import { evaluate } from '../evaluator'\nimport { parse } from '../parser'\nimport { scan } from '../scanner'\n\n/**\n * Evaluate a radspec expression with manual bindings.\n *\n * @example\n * import radspec from 'radspec'\n *\n * radspec.evaluateRaw('a is `a`', {\n *   a: { type: 'int256', value: 10 }\n * }).then(console.log)\n * @param  {string} source The radspec expression\n * @param  {Bindings} bindings An object of bindings and their values\n * @param {?Object} evaluatorOptions An options object for the evaluator (see Evaluator)\n * @return {Promise<string>} The result of the evaluation\n */\nexport function evaluateRaw (source, bindings, evaluatorOptions) {\n  return scan(source)\n    .then(parse)\n    .then((ast) => evaluate(ast, bindings, evaluatorOptions))\n}\n"],"file":"index.js"}},"error":null,"hash":"d8f81bf66e108282340e56b6d18dfde0","cacheData":{"env":{}}}