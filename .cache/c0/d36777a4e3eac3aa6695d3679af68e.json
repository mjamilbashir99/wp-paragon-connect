{"id":"node_modules/@aragon/connect-core/dist/utils/path/calculatePath.js","dependencies":[{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\calculatePath.js.map","includedInParent":true,"mtime":1594248789000},{"name":"C:\\xampp\\htdocs\\aragon-connect\\package.json","includedInParent":true,"mtime":1595855422975},{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\package.json","includedInParent":true,"mtime":1595838173215},{"name":"ethers","loc":{"line":4,"column":25},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\calculatePath.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\ethers\\dist\\ethers.umd.js"},{"name":"../address","loc":{"line":5,"column":26},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\calculatePath.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\address.js"},{"name":"../app","loc":{"line":6,"column":22},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\calculatePath.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\app.js"},{"name":"../callScript","loc":{"line":7,"column":29},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\calculatePath.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\callScript.js"},{"name":"../forwarding","loc":{"line":8,"column":29},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\calculatePath.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\forwarding.js"},{"name":"../transactions","loc":{"line":9,"column":31},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\calculatePath.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\transactions.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateTransactionPath = void 0;\nconst ethers_1 = require(\"ethers\");\nconst address_1 = require(\"../address\");\nconst app_1 = require(\"../app\");\nconst callScript_1 = require(\"../callScript\");\nconst forwarding_1 = require(\"../forwarding\");\nconst transactions_1 = require(\"../transactions\");\nfunction validateMethod(destination, methodSignature, destinationApp) {\n    const methods = destinationApp.intents;\n    if (!methods) {\n        throw new Error(`No functions specified in artifact for ${destination}`);\n    }\n    // Find the relevant method information\n    const method = methods.find(method => app_1.isFullMethodSignature(methodSignature)\n        ? method.sig === methodSignature\n        : // If the full signature isn't given, just select the first overload declared\n            method.sig.split('(')[0] === methodSignature);\n    if (!method) {\n        throw new Error(`No method named ${methodSignature} on ${destination}`);\n    }\n    return method;\n}\n/**\n * Calculate the forwarding path for a transaction to `destination`\n * that invokes `directTransaction`.\n *\n */\nasync function calculateForwardingPath(sender, directTransaction, forwardersWithPermission, forwarders, provider) {\n    // No forwarders can perform the requested action\n    if (forwardersWithPermission.length === 0) {\n        return { path: [] };\n    }\n    const createForwarderTransaction = transactions_1.createForwarderTransactionBuilder(sender, directTransaction);\n    // Check if one of the forwarders that has permission to perform an action\n    // with `sig` on `address` can forward for us directly\n    for (const forwarder of forwardersWithPermission) {\n        const script = callScript_1.encodeCallScript([directTransaction]);\n        if (await forwarding_1.canForward(forwarder, sender, script, provider)) {\n            const transaction = createForwarderTransaction(forwarder, script);\n            try {\n                const forwardingFeePretransaction = await transactions_1.buildForwardingFeePretransaction(transaction, provider);\n                // If that happens, we give up as we should've been able to perform the action with this\n                // forwarder\n                return {\n                    forwardingFeePretransaction,\n                    path: [transaction, directTransaction],\n                };\n            }\n            catch (err) {\n                return { path: [] };\n            }\n        }\n    }\n    // Get a list of all forwarders (excluding the forwarders with direct permission)\n    const filterForwarders = forwarders.filter(forwarder => !address_1.includesAddress(forwardersWithPermission, forwarder));\n    // Set up the path finding queue\n    // The queue takes the form of Array<[Array<EthereumTransaction>, Array<String>]>\n    // In other words: it is an array of tuples, where the first index of the tuple\n    // is the current path and the second index of the tuple is the\n    // queue (a list of unexplored forwarder addresses) for that path\n    const queue = forwardersWithPermission.map(forwarderWithPermission => {\n        // TODO: Fix types (type queue = [DirectTransaction[], string[]][])\n        return [\n            [\n                createForwarderTransaction(forwarderWithPermission, callScript_1.encodeCallScript([directTransaction])),\n                directTransaction,\n            ],\n            filterForwarders,\n        ];\n    });\n    // Find the shortest path via a breadth-first search of forwarder paths.\n    // We do a breadth-first instead of depth-first search because:\n    //   - We assume that most forwarding paths will be quite short, so it should be faster\n    //     to check in \"stages\" rather than exhaust single paths\n    //   - We don't currently protect against cycles in the path, and so exhausting single\n    //     paths can be wasteful if they result in dead ends\n    // TODO: We should find and return multiple paths\n    do {\n        const [path, [forwarder, ...nextQueue]] = queue.shift();\n        // Skip if no forwarder or the path is longer than 5\n        if (!forwarder || path.length > 5)\n            continue;\n        // Get the previous forwarder address\n        const previousForwarder = path[0].to;\n        // Encode the previous transaction into an EVM callscript\n        const script = callScript_1.encodeCallScript([path[0]]);\n        if (await forwarding_1.canForward(previousForwarder, forwarder, script, provider)) {\n            if (await forwarding_1.canForward(forwarder, sender, script, provider)) {\n                // The previous forwarder can forward a transaction for this forwarder,\n                // and this forwarder can forward for our address, so we have found a path\n                const transaction = createForwarderTransaction(forwarder, script);\n                // Only apply pretransactions to the first transaction in the path\n                // as it's the only one that will be executed by the user\n                try {\n                    const forwardingFeePretransaction = await transactions_1.buildForwardingFeePretransaction(transaction, provider);\n                    // If that happens, we give up as we should've been able to perform the action with this\n                    // forwarding path\n                    return {\n                        forwardingFeePretransaction,\n                        path: [transaction, ...path],\n                    };\n                }\n                catch (err) {\n                    return { path: [] };\n                }\n            }\n            else {\n                // The previous forwarder can forward a transaction for this forwarder,\n                // but this forwarder can not forward for our address, so we add it as a\n                // possible path in the queue for later exploration.\n                queue.push([\n                    [createForwarderTransaction(forwarder, script), ...path],\n                    // Avoid including the current forwarder as a candidate for the next step\n                    // in the path. Note that this is naive and may result in repeating cycles,\n                    // but the maximum path length would prevent against infinite loops\n                    forwarders.filter(nextForwarder => nextForwarder !== forwarder),\n                ]);\n            }\n        }\n        // We add the current path on the back of the queue again, but we shorten\n        // the list of possible forwarders.\n        queue.push([path, nextQueue]);\n    } while (queue.length);\n    return { path: [] };\n}\n/**\n * Calculate the transaction path for a transaction to `destination`\n * that invokes `methodSignature` with `params`.\n *\n */\nasync function calculateTransactionPath(sender, destination, methodSignature, params, apps, provider, finalForwarder //Address of the final forwarder that can perfom the action. Needed for actions that aren't in the ACL but whose execution depends on other factors\n) {\n    var _a;\n    // Get the destination app\n    const destinationApp = apps.find(app => app.address == destination);\n    if (!destinationApp) {\n        throw new Error(`Transaction path destination (${destination}) is not an installed app`);\n    }\n    // Make sure the method signature is correct\n    const method = validateMethod(destination, methodSignature, destinationApp);\n    const finalForwarderProvided = finalForwarder\n        ? ethers_1.ethers.utils.isAddress(finalForwarder)\n        : false;\n    const directTransaction = await transactions_1.createDirectTransactionForApp(sender, destinationApp, method.sig, params);\n    // We can already assume the user is able to directly invoke the action if:\n    //   - The method has no ACL requirements and no final forwarder was given, or\n    //   - The final forwarder matches the sender\n    if ((method.roles.length === 0 && !finalForwarderProvided) ||\n        (finalForwarder && address_1.addressesEqual(finalForwarder, sender))) {\n        try {\n            return { path: [directTransaction] };\n        }\n        catch (_) {\n            // If the direct transaction fails, we give up as we should have been able to\n            // perform the action directly\n            return { path: [] };\n        }\n    }\n    // Failing this, attempt transaction pathing algorithm with forwarders\n    const forwarders = apps\n        .filter(app => app.isForwarder === true)\n        .map(app => app.address);\n    let forwardersWithPermission = [];\n    if (finalForwarderProvided) {\n        if (finalForwarder) {\n            if (!address_1.includesAddress(forwarders, finalForwarder)) {\n                // Final forwarder was given, but did not match any available forwarders, so no path\n                // could be found\n                return { path: [] };\n            }\n            // Only attempt to find path with declared final forwarder; assume the final forwarder\n            // is able to invoke the action\n            forwardersWithPermission = [finalForwarder];\n        }\n    }\n    else {\n        // Find entities with the required permissions\n        const role = (await destinationApp.roles()).find(role => role.name === method.roles[0]);\n        const allowedEntities = ((_a = role === null || role === void 0 ? void 0 : role.permissions) === null || _a === void 0 ? void 0 : _a.map(permission => permission.granteeAddress)) || [];\n        // No one has access, so of course we don't as well\n        if (allowedEntities.length === 0) {\n            return { path: [] };\n        }\n        // User may have permission; attempt direct transaction\n        if (address_1.includesAddress(allowedEntities, sender) ||\n            address_1.includesAddress(allowedEntities, address_1.ANY_ENTITY)) {\n            try {\n                return { path: [directTransaction] };\n            }\n            catch (_) {\n                // Don't immediately fail as the permission could have parameters applied that\n                // disallows the user from the current action and forces us to use the full\n                // pathing algorithm\n            }\n        }\n        // Find forwarders with permission to perform the action\n        forwardersWithPermission = forwarders.filter(forwarder => address_1.includesAddress(allowedEntities, forwarder));\n    }\n    return calculateForwardingPath(sender, directTransaction, forwardersWithPermission, forwarders, provider);\n}\nexports.calculateTransactionPath = calculateTransactionPath;\n"},"sourceMaps":{"js":{"version":3,"file":"calculatePath.js","sourceRoot":"","sources":["../../../src/utils/path/calculatePath.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"5e7a46335453b07017bc299adffb9fd0","cacheData":{"env":{}}}