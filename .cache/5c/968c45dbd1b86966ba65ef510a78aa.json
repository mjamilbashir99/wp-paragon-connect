{"id":"node_modules/@urql/core/dist/9ab84a44.mjs","dependencies":[{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@urql\\core\\dist\\9ab84a44.mjs.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\xampp\\htdocs\\aragon-connect\\package.json","includedInParent":true,"mtime":1595855422975},{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@urql\\core\\package.json","includedInParent":true,"mtime":1595838173231},{"name":"graphql/language/kinds","loc":{"line":156,"column":21},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@urql\\core\\dist\\9ab84a44.mjs","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\graphql\\language\\kinds.mjs"},{"name":"graphql/language/printer","loc":{"line":158,"column":22},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@urql\\core\\dist\\9ab84a44.mjs","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\graphql\\language\\printer.mjs"},{"name":"graphql/error/GraphQLError","loc":{"line":160,"column":29},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@urql\\core\\dist\\9ab84a44.mjs","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\graphql\\error\\GraphQLError.mjs"},{"name":"wonka","loc":{"line":162,"column":21},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@urql\\core\\dist\\9ab84a44.mjs","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\wonka\\dist\\wonka.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._ = h;\nexports.a = w;\nexports.b = makeFetchBody;\nexports.c = makeFetchURL;\nexports.d = makeFetchOptions;\nexports.e = makeFetchSource;\nexports.m = v;\nexports.s = u;\nexports.C = void 0;\n\nvar _kinds = require(\"graphql/language/kinds\");\n\nvar _printer = require(\"graphql/language/printer\");\n\nvar _GraphQLError = require(\"graphql/error/GraphQLError\");\n\nvar _wonka = require(\"wonka\");\n\nfunction h() {\n  return (exports._ = h = Object.assign || function (a) {\n    var b, c, d;\n\n    for (b = 1; b < arguments.length; b++) {\n      c = arguments[b];\n\n      for (d in c) {\n        Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d]);\n      }\n    }\n\n    return a;\n  }).apply(this, arguments);\n}\n\nfunction l(a) {\n  return \"string\" == typeof a ? new _GraphQLError.GraphQLError(a) : \"object\" == typeof a && a.message ? new _GraphQLError.GraphQLError(a.message, a.nodes, a.source, a.positions, a.path, a, a.extensions || {}) : a;\n}\n\nfunction n() {\n  return this.message;\n}\n\nfunction u(a) {\n  q.clear();\n  return function t(a) {\n    var b, c, d, e, f, g;\n\n    if (null === a || q.has(a)) {\n      return \"null\";\n    }\n\n    if (\"object\" != typeof a) {\n      return JSON.stringify(a) || \"\";\n    }\n\n    if (a.toJSON) {\n      return t(a.toJSON());\n    }\n\n    if (Array.isArray(a)) {\n      for (b = \"[\", c = 0, d = a.length; c < d; c++) {\n        0 < c && (b += \",\");\n        b += 0 < (e = t(a[c])).length ? e : \"null\";\n      }\n\n      return b + \"]\";\n    }\n\n    if (!(b = Object.keys(a).sort()).length && a.constructor && a.constructor !== Object) {\n      return b = r.get(a) || Math.random().toString(36).slice(2), r.set(a, b), '{\"__key\":\"' + b + '\"}';\n    }\n\n    q.add(a);\n    c = \"{\";\n    d = 0;\n\n    for (e = b.length; d < e; d++) {\n      (g = t(a[f = b[d]])) && (1 < c.length && (c += \",\"), c += t(f) + \":\" + g);\n    }\n\n    q.delete(a);\n    return c + \"}\";\n  }(a);\n}\n\nfunction v(a, b, c) {\n  return {\n    operation: a,\n    data: b.data,\n    error: Array.isArray(b.errors) ? new p({\n      graphQLErrors: b.errors,\n      response: c\n    }) : void 0,\n    extensions: \"object\" == typeof b.extensions && b.extensions || void 0\n  };\n}\n\nfunction w(a, b, c) {\n  return {\n    operation: a,\n    data: void 0,\n    error: new p({\n      networkError: b,\n      response: c\n    }),\n    extensions: void 0\n  };\n}\n\nfunction makeFetchBody(a) {\n  var c,\n      d,\n      e,\n      f,\n      b = (0, _printer.print)(a.query);\n\n  a: {\n    for (d = 0, e = (c = a.query).definitions.length; d < e; d++) {\n      if ((f = c.definitions[d]).kind === _kinds.Kind.OPERATION_DEFINITION && f.name) {\n        c = f.name.value;\n        break a;\n      }\n    }\n\n    c = void 0;\n  }\n\n  return {\n    query: b,\n    operationName: c,\n    variables: a.variables || void 0,\n    extensions: void 0\n  };\n}\n\nfunction makeFetchURL(a, b) {\n  var c = a.context.url;\n\n  if (\"query\" !== a.operationName || !a.context.preferGetMethod || !b) {\n    return c;\n  }\n\n  a = [];\n  b.operationName && a.push(\"operationName=\" + encodeURIComponent(b.operationName));\n  b.query && a.push(\"query=\" + encodeURIComponent(b.query));\n  b.variables && a.push(\"variables=\" + encodeURIComponent(u(b.variables)));\n  b.extensions && a.push(\"extensions=\" + encodeURIComponent(u(b.extensions)));\n  return c + \"?\" + a.join(\"&\");\n}\n\nfunction makeFetchOptions(a, b) {\n  var c = \"query\" === a.operationName && !!a.context.preferGetMethod;\n  return h({}, a = \"function\" == typeof a.context.fetchOptions ? a.context.fetchOptions() : a.context.fetchOptions || {}, {\n    body: !c && b ? JSON.stringify(b) : void 0,\n    method: c ? \"GET\" : \"POST\",\n    headers: h({}, {\n      \"content-type\": \"application/json\"\n    }, a.headers)\n  });\n}\n\nfunction makeFetchSource(a, b, c) {\n  return (0, _wonka.make)(function (d) {\n    var e = d.next,\n        f = d.complete,\n        g = \"undefined\" != typeof AbortController ? new AbortController() : null,\n        m = !1;\n    Promise.resolve().then(function () {\n      if (!m) {\n        return g && (c.signal = g.signal), function x(a, b, c) {\n          var e,\n              d = !1;\n          return (a.context.fetch || fetch)(b, c).then(function (a) {\n            e = a;\n            d = 200 > a.status || a.status >= (\"manual\" === c.redirect ? 400 : 300);\n            return a.json();\n          }).then(function (b) {\n            if (!(\"data\" in b) && !(\"errors\" in b)) {\n              throw Error(\"No Content\");\n            }\n\n            return v(a, b, e);\n          }).catch(function (b) {\n            if (\"AbortError\" !== b.name) {\n              return w(a, d ? Error(e.statusText) : b, e);\n            }\n          });\n        }(a, b, c);\n      }\n    }).then(function (a) {\n      m || (m = !0, a && e(a), f());\n    });\n    return function () {\n      m = !0;\n      g && g.abort();\n    };\n  });\n}\n\nvar p = function (a) {\n  function b(b) {\n    var f,\n        c = b.networkError,\n        e = b.response;\n\n    f = function k(a, b) {\n      var d = \"\";\n\n      if (void 0 !== a) {\n        return d = \"[Network] \" + a.message;\n      }\n\n      void 0 !== b && b.forEach(function c(a) {\n        d += \"[GraphQL] \" + a.message + \"\\n\";\n      });\n      return d.trim();\n    }(c, b = (b.graphQLErrors || []).map(l));\n\n    a.call(this, f);\n    this.name = \"CombinedError\";\n    this.message = f;\n    this.graphQLErrors = b;\n    this.networkError = c;\n    this.response = e;\n  }\n\n  a && (b.__proto__ = a);\n  (b.prototype = Object.create(a && a.prototype)).constructor = b;\n  b.prototype.toString = n;\n  return b;\n}(Error),\n    q = new Set(),\n    r = new WeakMap();\n\nexports.C = p;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/utils/error.ts","name":"error","original":{"line":9,"column":12},"generated":{"line":37,"column":5}},{"source":"../src/utils/error.ts","name":"error","original":{"line":9,"column":12},"generated":{"line":37,"column":11}},{"source":"../src/utils/error.ts","name":"error","original":{"line":9,"column":12},"generated":{"line":37,"column":17}},{"source":"../src/internal/fetchOptions.ts","name":"print","original":{"line":32,"column":9},"generated":{"line":48,"column":0}},{"source":"../src/internal/fetchOptions.ts","name":"print","original":{"line":32,"column":9},"generated":{"line":48,"column":9}},{"source":"../src/internal/fetchOptions.ts","name":"print","original":{"line":32,"column":9},"generated":{"line":48,"column":10}},{"source":"../src/internal/fetchOptions.ts","name":"print","original":{"line":32,"column":9},"generated":{"line":48,"column":11}},{"source":"../src/internal/fetchOptions.ts","name":"print","original":{"line":32,"column":9},"generated":{"line":48,"column":12}},{"source":"../src/internal/fetchOptions.ts","name":"print","original":{"line":32,"column":9},"generated":{"line":48,"column":14}},{"source":"../src/utils/stringifyVariables.ts","name":"key","original":{"line":25,"column":10},"generated":{"line":50,"column":20}},{"source":"../src/utils/stringifyVariables.ts","name":"key","original":{"line":25,"column":10},"generated":{"line":50,"column":23}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":51,"column":20}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":51,"column":23}},{"source":"../src/utils/stringifyVariables.ts","name":"key","original":{"line":34,"column":30},"generated":{"line":58,"column":28}},{"source":"../src/utils/stringifyVariables.ts","name":"key","original":{"line":34,"column":30},"generated":{"line":58,"column":34}},{"source":"../src/utils/stringifyVariables.ts","name":"a","original":{"line":42,"column":9},"generated":{"line":62,"column":15}},{"source":"../src/utils/stringifyVariables.ts","name":"a","original":{"line":42,"column":9},"generated":{"line":62,"column":16}},{"source":"../src/utils/stringifyVariables.ts","name":"a","original":{"line":42,"column":9},"generated":{"line":62,"column":17}},{"source":"../src/utils/stringifyVariables.ts","name":"a","original":{"line":42,"column":9},"generated":{"line":62,"column":23}},{"source":"../src/utils/result.ts","name":"result","original":{"line":6,"column":2},"generated":{"line":68,"column":22}},{"source":"../src/utils/result.ts","name":"result","original":{"line":6,"column":2},"generated":{"line":68,"column":23}},{"source":"../src/utils/result.ts","name":"result","original":{"line":6,"column":2},"generated":{"line":68,"column":24}},{"source":"../src/utils/result.ts","name":"result","original":{"line":6,"column":2},"generated":{"line":68,"column":25}},{"source":"../src/utils/result.ts","name":"result","original":{"line":6,"column":2},"generated":{"line":68,"column":26}},{"source":"../src/utils/result.ts","name":"result","original":{"line":6,"column":2},"generated":{"line":68,"column":27}},{"source":"../src/utils/result.ts","name":"result","original":{"line":6,"column":2},"generated":{"line":68,"column":28}},{"source":"../src/utils/result.ts","name":"result","original":{"line":6,"column":2},"generated":{"line":68,"column":31}},{"source":"../src/utils/result.ts","name":"result","original":{"line":6,"column":2},"generated":{"line":68,"column":40}},{"source":"../src/utils/result.ts","name":"result","original":{"line":6,"column":2},"generated":{"line":68,"column":44}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":12,"column":6},"generated":{"line":74,"column":14}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":12,"column":6},"generated":{"line":74,"column":20}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":12,"column":6},"generated":{"line":74,"column":21}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":12,"column":6},"generated":{"line":74,"column":25}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":12,"column":6},"generated":{"line":74,"column":26}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":12,"column":6},"generated":{"line":74,"column":27}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":12,"column":6},"generated":{"line":74,"column":29}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":12,"column":6},"generated":{"line":74,"column":33}},{"source":"../src/internal/fetchSource.ts","name":"response","original":{"line":17,"column":6},"generated":{"line":74,"column":37}},{"source":"../src/internal/fetchSource.ts","name":"response","original":{"line":17,"column":6},"generated":{"line":74,"column":47}},{"source":"../src/internal/fetchSource.ts","name":"response","original":{"line":17,"column":6},"generated":{"line":74,"column":48}},{"source":"../src/internal/fetchSource.ts","name":"response","original":{"line":17,"column":6},"generated":{"line":74,"column":49}},{"source":"../src/internal/fetchSource.ts","name":"response","original":{"line":17,"column":6},"generated":{"line":74,"column":64}},{"source":"../src/internal/fetchSource.ts","name":"response","original":{"line":17,"column":6},"generated":{"line":74,"column":65}},{"source":"../src/internal/fetchSource.ts","name":"response","original":{"line":17,"column":6},"generated":{"line":74,"column":66}},{"source":"../src/internal/fetchSource.ts","name":"response","original":{"line":17,"column":6},"generated":{"line":74,"column":77}},{"source":"../src/internal/fetchSource.ts","name":"response","original":{"line":17,"column":6},"generated":{"line":74,"column":82}},{"source":"../src/internal/fetchSource.ts","name":"response","original":{"line":17,"column":6},"generated":{"line":74,"column":90}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":18,"column":6},"generated":{"line":75,"column":13}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":18,"column":6},"generated":{"line":75,"column":14}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":19,"column":8},"generated":{"line":75,"column":17}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":19,"column":8},"generated":{"line":75,"column":18}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":19,"column":8},"generated":{"line":75,"column":19}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":19,"column":8},"generated":{"line":75,"column":22}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":19,"column":8},"generated":{"line":75,"column":23}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":19,"column":8},"generated":{"line":75,"column":24}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":29}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":33}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":34}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":40}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":43}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":51}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":52}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":54}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":56}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":61}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":62}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":63}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":18,"column":6},"generated":{"line":75,"column":64}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":66}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":67}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":68}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":71}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":72}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":73}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":75}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":76}},{"source":"../src/internal/fetchSource.ts","name":"statusNotOk","original":{"line":18,"column":6},"generated":{"line":75,"column":77}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":79}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":94}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":95}},{"source":"../src/internal/fetchSource.ts","name":"res","original":{"line":20,"column":8},"generated":{"line":75,"column":98}},{"source":"../src/internal/fetchSource.ts","name":"a","original":{"line":24,"column":10},"generated":{"line":78,"column":10}},{"source":"../src/internal/fetchSource.ts","name":"makeErrorResult","original":{"line":32,"column":15},"generated":{"line":83,"column":13}},{"source":"../src/internal/fetchSource.ts","name":"makeErrorResult","original":{"line":32,"column":15},"generated":{"line":83,"column":14}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":15}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":16}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":19}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":20}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":21}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":22}},{"source":"../src/internal/fetchSource.ts","name":"makeErrorResult","original":{"line":32,"column":15},"generated":{"line":83,"column":23}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":31}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":35}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":36}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":37}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":43}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":48}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":49}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":53}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":56}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":59}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":60}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":64}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":65}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":66}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":67}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":68}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":71}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":74}},{"source":"../src/internal/fetchSource.ts","name":"f","original":{"line":31,"column":25},"generated":{"line":83,"column":77}},{"source":"../src/internal/fetchOptions.ts","name":"node","original":{"line":16,"column":8},"generated":{"line":91,"column":11}},{"source":"../src/internal/fetchOptions.ts","name":"node","original":{"line":16,"column":8},"generated":{"line":91,"column":14}},{"source":"../src/internal/fetchOptions.ts","name":"node","original":{"line":16,"column":8},"generated":{"line":91,"column":17}},{"source":"../src/internal/fetchOptions.ts","name":"node","original":{"line":16,"column":8},"generated":{"line":91,"column":20}},{"source":"../src/internal/fetchOptions.ts","name":null,"original":{"line":31,"column":18},"generated":{"line":98,"column":14}},{"source":"../src/internal/fetchOptions.ts","name":"url","original":{"line":44,"column":37},"generated":{"line":103,"column":11}},{"source":"../src/internal/fetchOptions.ts","name":"url","original":{"line":44,"column":37},"generated":{"line":103,"column":14}},{"source":"../src/internal/fetchOptions.ts","name":"url","original":{"line":44,"column":37},"generated":{"line":103,"column":17}},{"source":"../src/internal/fetchOptions.ts","name":"url","original":{"line":44,"column":37},"generated":{"line":103,"column":20}},{"source":"../src/internal/fetchOptions.ts","name":"_extends","original":{"line":81,"column":9},"generated":{"line":175,"column":52}},{"source":"../src/internal/fetchOptions.ts","name":"_extends","original":{"line":81,"column":9},"generated":{"line":175,"column":54}},{"source":"../src/internal/fetchOptions.ts","name":"_extends","original":{"line":81,"column":9},"generated":{"line":175,"column":57}},{"source":"../src/internal/fetchOptions.ts","name":"_extends","original":{"line":81,"column":9},"generated":{"line":175,"column":60}},{"source":"../src/internal/fetchOptions.ts","name":"_extends","original":{"line":81,"column":9},"generated":{"line":175,"column":63}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":34}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":35}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":36}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":42}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":47}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":60}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":61}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":62}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":70}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":73}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":76}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":79}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":180,"column":82}},{"source":"../src/internal/fetchSource.ts","name":"ended","original":{"line":54,"column":12},"generated":{"line":181,"column":19}},{"source":"../src/internal/fetchSource.ts","name":"ended","original":{"line":54,"column":12},"generated":{"line":181,"column":20}},{"source":"../src/internal/fetchSource.ts","name":"ended","original":{"line":54,"column":12},"generated":{"line":181,"column":21}},{"source":"../src/internal/fetchSource.ts","name":"ended","original":{"line":54,"column":12},"generated":{"line":181,"column":25}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":184,"column":0}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":184,"column":20}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":184,"column":25}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":184,"column":26}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":184,"column":38}},{"source":"../src/internal/fetchSource.ts","name":"Promise","original":{"line":52,"column":4},"generated":{"line":184,"column":39}},{"source":"../src/internal/fetchSource.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":188,"column":19}},{"source":"../src/internal/fetchSource.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":188,"column":29}},{"source":"../src/internal/fetchSource.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":188,"column":30}},{"source":"../src/internal/fetchSource.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":188,"column":32}},{"source":"../src/utils/stringifyVariables.ts","name":"networkError","original":{"line":1,"column":13},"generated":{"line":208,"column":14}},{"source":"../src/utils/stringifyVariables.ts","name":"networkError","original":{"line":1,"column":13},"generated":{"line":209,"column":8}},{"source":"../src/utils/stringifyVariables.ts","name":"networkError","original":{"line":1,"column":13},"generated":{"line":209,"column":9}},{"source":"../src/utils/stringifyVariables.ts","name":"networkError","original":{"line":1,"column":13},"generated":{"line":209,"column":12}},{"source":"../src/utils/stringifyVariables.ts","name":"networkError","original":{"line":1,"column":13},"generated":{"line":209,"column":13}},{"source":"../src/utils/stringifyVariables.ts","name":"networkError","original":{"line":1,"column":13},"generated":{"line":209,"column":14}},{"source":"../src/utils/error.ts","name":"error","original":{"line":18,"column":9},"generated":{"line":211,"column":17}},{"source":"../src/utils/error.ts","name":"error","original":{"line":18,"column":9},"generated":{"line":211,"column":19}},{"source":"../src/utils/error.ts","name":"error","original":{"line":18,"column":9},"generated":{"line":211,"column":22}},{"source":"../src/utils/error.ts","name":"error","original":{"line":18,"column":9},"generated":{"line":211,"column":25}},{"source":"../src/utils/error.ts","name":"CombinedError","original":{"line":40,"column":13},"generated":{"line":215,"column":0}},{"source":"../src/utils/error.ts","name":"CombinedError","original":{"line":40,"column":13},"generated":{"line":215,"column":15}},{"source":"../src/utils/error.ts","name":"CombinedError","original":{"line":40,"column":13},"generated":{"line":215,"column":16}},{"source":"../src/utils/error.ts","name":"CombinedError","original":{"line":40,"column":13},"generated":{"line":215,"column":19}},{"source":"../src/utils/error.ts","name":"CombinedError","original":{"line":40,"column":13},"generated":{"line":215,"column":34}},{"source":"../src/utils/error.ts","name":"CombinedError","original":{"line":40,"column":13},"generated":{"line":215,"column":35}},{"source":"../src/utils/error.ts","name":"CombinedError","original":{"line":40,"column":13},"generated":{"line":215,"column":36}},{"source":"../src/utils/error.ts","name":"CombinedError","original":{"line":40,"column":13},"generated":{"line":215,"column":43}},{"source":"../src/utils/stringifyVariables.ts","name":"i","original":{"line":13,"column":13},"generated":{"line":232,"column":22}},{"source":"../src/utils/stringifyVariables.ts","name":"out","original":{"line":14,"column":17},"generated":{"line":233,"column":17}},{"source":"../src/utils/stringifyVariables.ts","name":"out","original":{"line":14,"column":17},"generated":{"line":233,"column":23}},{"source":"../src/utils/stringifyVariables.ts","name":"out","original":{"line":14,"column":17},"generated":{"line":233,"column":24}},{"source":"../src/utils/stringifyVariables.ts","name":"out","original":{"line":14,"column":17},"generated":{"line":233,"column":30}},{"source":"../src/utils/stringifyVariables.ts","name":"out","original":{"line":14,"column":17},"generated":{"line":233,"column":31}},{"source":"../src/utils/stringifyVariables.ts","name":"out","original":{"line":14,"column":17},"generated":{"line":233,"column":32}},{"source":"../src/utils/stringifyVariables.ts","name":"out","original":{"line":14,"column":17},"generated":{"line":233,"column":36}},{"source":"../src/utils/stringifyVariables.ts","name":"out","original":{"line":14,"column":17},"generated":{"line":233,"column":37}},{"source":"../src/utils/stringifyVariables.ts","name":"out","original":{"line":14,"column":17},"generated":{"line":233,"column":38}},{"source":"../src/utils/stringifyVariables.ts","name":"out","original":{"line":14,"column":17},"generated":{"line":233,"column":47}},{"source":"../src/utils/stringifyVariables.ts","name":"stringify","original":{"line":15,"column":20},"generated":{"line":233,"column":50}},{"source":"../src/utils/stringifyVariables.ts","name":"stringify","original":{"line":15,"column":20},"generated":{"line":233,"column":64}},{"source":"../src/utils/stringifyVariables.ts","name":"Object","original":{"line":23,"column":15},"generated":{"line":238,"column":12}}],"sources":{"../src/utils/error.ts":"import { GraphQLError } from 'graphql';\n\nconst generateErrorMessage = (\n  networkErr?: Error,\n  graphQlErrs?: GraphQLError[]\n) => {\n  let error = '';\n  if (networkErr !== undefined) {\n    return (error = `[Network] ${networkErr.message}`);\n  }\n\n  if (graphQlErrs !== undefined) {\n    graphQlErrs.forEach(err => {\n      error += `[GraphQL] ${err.message}\\n`;\n    });\n  }\n\n  return error.trim();\n};\n\nconst rehydrateGraphQlError = (error: any): GraphQLError => {\n  if (typeof error === 'string') {\n    return new GraphQLError(error);\n  } else if (typeof error === 'object' && error.message) {\n    return new GraphQLError(\n      error.message,\n      error.nodes,\n      error.source,\n      error.positions,\n      error.path,\n      error,\n      error.extensions || {}\n    );\n  } else {\n    return error as any;\n  }\n};\n\n/** An error which can consist of GraphQL errors and Network errors. */\nexport class CombinedError extends Error {\n  public name: string;\n  public message: string;\n  public graphQLErrors: GraphQLError[];\n  public networkError?: Error;\n  public response?: any;\n\n  constructor({\n    networkError,\n    graphQLErrors,\n    response,\n  }: {\n    networkError?: Error;\n    graphQLErrors?: Array<string | Partial<GraphQLError> | Error>;\n    response?: any;\n  }) {\n    const normalizedGraphQLErrors = (graphQLErrors || []).map(\n      rehydrateGraphQlError\n    );\n    const message = generateErrorMessage(networkError, normalizedGraphQLErrors);\n\n    super(message);\n\n    this.name = 'CombinedError';\n    this.message = message;\n    this.graphQLErrors = normalizedGraphQLErrors;\n    this.networkError = networkError;\n    this.response = response;\n  }\n\n  toString() {\n    return this.message;\n  }\n}\n","../src/internal/fetchOptions.ts":"import { Kind, print, DocumentNode } from 'graphql';\n\nimport { stringifyVariables } from '../utils';\nimport { Operation } from '../types';\n\nexport interface FetchBody {\n  query?: string;\n  operationName: string | undefined;\n  variables: undefined | Record<string, any>;\n  extensions: undefined | Record<string, any>;\n}\n\nconst getOperationName = (query: DocumentNode): string | undefined => {\n  for (let i = 0, l = query.definitions.length; i < l; i++) {\n    const node = query.definitions[i];\n    if (node.kind === Kind.OPERATION_DEFINITION && node.name) {\n      return node.name.value;\n    }\n  }\n};\n\nconst shouldUseGet = (operation: Operation): boolean => {\n  return (\n    operation.operationName === 'query' && !!operation.context.preferGetMethod\n  );\n};\n\nexport const makeFetchBody = (request: {\n  query: DocumentNode;\n  variables?: object;\n}): FetchBody => ({\n  query: print(request.query),\n  operationName: getOperationName(request.query),\n  variables: request.variables || undefined,\n  extensions: undefined,\n});\n\nexport const makeFetchURL = (\n  operation: Operation,\n  body?: FetchBody\n): string => {\n  const useGETMethod = shouldUseGet(operation);\n  const url = operation.context.url;\n  if (!useGETMethod || !body) return url;\n\n  const search: string[] = [];\n  if (body.operationName) {\n    search.push('operationName=' + encodeURIComponent(body.operationName));\n  }\n\n  if (body.query) {\n    search.push('query=' + encodeURIComponent(body.query));\n  }\n\n  if (body.variables) {\n    search.push(\n      'variables=' + encodeURIComponent(stringifyVariables(body.variables))\n    );\n  }\n\n  if (body.extensions) {\n    search.push(\n      'extensions=' + encodeURIComponent(stringifyVariables(body.extensions))\n    );\n  }\n\n  return `${url}?${search.join('&')}`;\n};\n\nexport const makeFetchOptions = (\n  operation: Operation,\n  body?: FetchBody\n): RequestInit => {\n  const useGETMethod = shouldUseGet(operation);\n\n  const extraOptions =\n    typeof operation.context.fetchOptions === 'function'\n      ? operation.context.fetchOptions()\n      : operation.context.fetchOptions || {};\n\n  return {\n    ...extraOptions,\n    body: !useGETMethod && body ? JSON.stringify(body) : undefined,\n    method: useGETMethod ? 'GET' : 'POST',\n    headers: {\n      'content-type': 'application/json',\n      ...extraOptions.headers,\n    },\n  };\n};\n","../src/utils/stringifyVariables.ts":"const seen = new Set();\nconst cache = new WeakMap();\n\nconst stringify = (x: any): string => {\n  if (x === null || seen.has(x)) {\n    return 'null';\n  } else if (typeof x !== 'object') {\n    return JSON.stringify(x) || '';\n  } else if (x.toJSON) {\n    return stringify(x.toJSON());\n  } else if (Array.isArray(x)) {\n    let out = '[';\n    for (let i = 0, l = x.length; i < l; i++) {\n      if (i > 0) out += ',';\n      const value = stringify(x[i]);\n      out += value.length > 0 ? value : 'null';\n    }\n\n    out += ']';\n    return out;\n  }\n\n  const keys = Object.keys(x).sort();\n  if (!keys.length && x.constructor && x.constructor !== Object) {\n    const key = cache.get(x) || Math.random().toString(36).slice(2);\n    cache.set(x, key);\n    return `{\"__key\":\"${key}\"}`;\n  }\n\n  seen.add(x);\n  let out = '{';\n  for (let i = 0, l = keys.length; i < l; i++) {\n    const key = keys[i];\n    const value = stringify(x[key]);\n    if (value) {\n      if (out.length > 1) out += ',';\n      out += stringify(key) + ':' + value;\n    }\n  }\n\n  seen.delete(x);\n  out += '}';\n  return out;\n};\n\nexport const stringifyVariables = (x: any): string => {\n  seen.clear();\n  return stringify(x);\n};\n","../src/internal/fetchSource.ts":"import { Operation, OperationResult } from '../types';\nimport { makeResult, makeErrorResult } from '../utils';\nimport { make } from 'wonka';\n\nconst executeFetch = (\n  operation: Operation,\n  url: string,\n  fetchOptions: RequestInit\n): Promise<OperationResult> => {\n  const fetcher = operation.context.fetch;\n\n  let statusNotOk = false;\n  let response: Response;\n\n  return (fetcher || fetch)(url, fetchOptions)\n    .then((res: Response) => {\n      response = res;\n      statusNotOk =\n        res.status < 200 ||\n        res.status >= (fetchOptions.redirect === 'manual' ? 400 : 300);\n      return res.json();\n    })\n    .then((result: any) => {\n      if (!('data' in result) && !('errors' in result)) {\n        throw new Error('No Content');\n      }\n\n      return makeResult(operation, result, response);\n    })\n    .catch((error: Error) => {\n      if (error.name !== 'AbortError') {\n        return makeErrorResult(\n          operation,\n          statusNotOk ? new Error(response.statusText) : error,\n          response\n        );\n      }\n    }) as Promise<OperationResult>;\n};\n\nexport const makeFetchSource = (\n  operation: Operation,\n  url: string,\n  fetchOptions: RequestInit\n) => {\n  return make<OperationResult>(({ next, complete }) => {\n    const abortController =\n      typeof AbortController !== 'undefined' ? new AbortController() : null;\n\n    let ended = false;\n\n    Promise.resolve()\n      .then(() => {\n        if (ended) {\n          return;\n        } else if (abortController) {\n          fetchOptions.signal = abortController.signal;\n        }\n\n        return executeFetch(operation, url, fetchOptions);\n      })\n      .then((result: OperationResult | undefined) => {\n        if (!ended) {\n          ended = true;\n          if (result) next(result);\n          complete();\n        }\n      });\n\n    return () => {\n      ended = true;\n      if (abortController) {\n        abortController.abort();\n      }\n    };\n  });\n};\n","../src/utils/result.ts":"import { Operation, OperationResult } from '../types';\nimport { CombinedError } from './error';\n\nexport const makeResult = (\n  operation: Operation,\n  result: any,\n  response?: any\n): OperationResult => ({\n  operation,\n  data: result.data,\n  error: Array.isArray(result.errors)\n    ? new CombinedError({\n        graphQLErrors: result.errors,\n        response,\n      })\n    : undefined,\n  extensions:\n    (typeof result.extensions === 'object' && result.extensions) || undefined,\n});\n\nexport const makeErrorResult = (\n  operation: Operation,\n  error: Error,\n  response?: any\n): OperationResult => ({\n  operation,\n  data: undefined,\n  error: new CombinedError({\n    networkError: error,\n    response,\n  }),\n  extensions: undefined,\n});\n"},"lineCount":null}},"error":null,"hash":"d8ef73deec0c3dd3a70655bdaaee1398","cacheData":{"env":{}}}