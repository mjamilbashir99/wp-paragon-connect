{"id":"node_modules/radspec/dist/helpers/formatPct.js","dependencies":[{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\formatPct.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\xampp\\htdocs\\aragon-connect\\package.json","includedInParent":true,"mtime":1595855422975},{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\package.json","includedInParent":true,"mtime":1595838173348},{"name":"ethers","loc":{"line":1,"column":111},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\formatPct.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\ethers\\dist\\ethers.umd.js"},{"name":"./lib/formatBN","loc":{"line":1,"column":139},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\formatPct.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\lib\\formatBN.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var _ethers=require(\"ethers\"),_formatBN=require(\"./lib/formatBN\"),_default=()=>/**\n   * Format a percentage amount\n   *\n   * @param {*} value The number to be formatted as a percentage\n   * @param {*} [base=10^18] The number that is considered to be 100% when calculating the percentage\n   * @param {*} [precision=2] The number of decimal places to format to\n   * @return {Promise<radspec/evaluator/TypedValue>}\n   */async(value,base=(0,_formatBN.tenPow)(18),precision=2)=>{const valueBn=_ethers.BigNumber.from(value),baseBn=_ethers.BigNumber.from(base),oneHundred=(0,_formatBN.tenPow)(2),formattedAmount=(0,_formatBN.formatBN)(valueBn.mul(oneHundred),baseBn,+precision);return{type:\"string\",value:`${formattedAmount}`}};exports.default=_default;\n"},"sourceMaps":{"js":{"version":3,"sources":["../../src/helpers/formatPct.js"],"names":["value","base","precision","valueBn","BigNumber","from","baseBn","oneHundred","formattedAmount","mul","type"],"mappings":"sKAGe,IACb;;;;;;;KAQA,MAAOA,KAAP,CAAcC,IAAI,CAAG,qBAAO,EAAP,CAArB,CAAiCC,SAAS,CAAG,CAA7C,GAAmD,MAC3CC,CAAAA,OAAO,CAAGC,kBAAUC,IAAV,CAAeL,KAAf,CADiC,CAE3CM,MAAM,CAAGF,kBAAUC,IAAV,CAAeJ,IAAf,CAFkC,CAI3CM,UAAU,CAAG,qBAAO,CAAP,CAJ8B,CAK3CC,eAAe,CAAG,uBACtBL,OAAO,CAACM,GAAR,CAAYF,UAAZ,CADsB,CAEtBD,MAFsB,EAGfJ,SAHe,CALyB,CAWjD,MAAO,CACLQ,IAAI,CAAE,QADD,CAELV,KAAK,CAAG,GAAEQ,eAAgB,EAFrB,CAIR,C","sourcesContent":["import { BigNumber } from 'ethers'\nimport { formatBN, tenPow } from './lib/formatBN'\n\nexport default () =>\n  /**\n   * Format a percentage amount\n   *\n   * @param {*} value The number to be formatted as a percentage\n   * @param {*} [base=10^18] The number that is considered to be 100% when calculating the percentage\n   * @param {*} [precision=2] The number of decimal places to format to\n   * @return {Promise<radspec/evaluator/TypedValue>}\n   */\n  async (value, base = tenPow(18), precision = 2) => {\n    const valueBn = BigNumber.from(value)\n    const baseBn = BigNumber.from(base)\n\n    const oneHundred = tenPow(2)\n    const formattedAmount = formatBN(\n      valueBn.mul(oneHundred),\n      baseBn,\n      Number(precision)\n    )\n\n    return {\n      type: 'string',\n      value: `${formattedAmount}`\n    }\n  }\n"],"file":"formatPct.js"}},"error":null,"hash":"4172a947e8fa55e441e357f2bf22fa0e","cacheData":{"env":{}}}