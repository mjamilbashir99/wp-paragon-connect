{"id":"VbAV","dependencies":[{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\withDecimals.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\xampp\\htdocs\\aragon-connect\\package.json","includedInParent":true,"mtime":1595838175389},{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\package.json","includedInParent":true,"mtime":1595838173348},{"name":"ethers","loc":{"line":1,"column":111},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\withDecimals.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\ethers\\dist\\ethers.umd.js"},{"name":"./lib/formatBN","loc":{"line":1,"column":139},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\withDecimals.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\lib\\formatBN.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=require(\"ethers\"),r=require(\"./lib/formatBN\"),t=()=>async(t,o=18)=>{const s=e.BigNumber.from(t);return{type:\"string\",value:(0,r.formatBN)(s,(0,r.tenPow)(o),+o,!1)}};exports.default=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":4,"column":15},"generated":{"line":1,"column":145}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":12,"column":2},"generated":{"line":1,"column":149}},{"source":"../../src/helpers/withDecimals.js","name":"amount","original":{"line":12,"column":9},"generated":{"line":1,"column":155}},{"source":"../../src/helpers/withDecimals.js","name":"decimals","original":{"line":12,"column":17},"generated":{"line":1,"column":157}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":12,"column":28},"generated":{"line":1,"column":159}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":12,"column":35},"generated":{"line":1,"column":165}},{"source":"../../src/helpers/withDecimals.js","name":"amountBn","original":{"line":13,"column":10},"generated":{"line":1,"column":171}},{"source":"../../src/helpers/withDecimals.js","name":"BigNumber","original":{"line":13,"column":21},"generated":{"line":1,"column":173}},{"source":"../../src/helpers/withDecimals.js","name":"BigNumber","original":{"line":13,"column":21},"generated":{"line":1,"column":175}},{"source":"../../src/helpers/withDecimals.js","name":"from","original":{"line":13,"column":31},"generated":{"line":1,"column":185}},{"source":"../../src/helpers/withDecimals.js","name":"amount","original":{"line":13,"column":36},"generated":{"line":1,"column":190}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":17,"column":4},"generated":{"line":1,"column":193}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":17,"column":11},"generated":{"line":1,"column":199}},{"source":"../../src/helpers/withDecimals.js","name":"type","original":{"line":18,"column":6},"generated":{"line":1,"column":200}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":18,"column":12},"generated":{"line":1,"column":205}},{"source":"../../src/helpers/withDecimals.js","name":"value","original":{"line":19,"column":6},"generated":{"line":1,"column":214}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":15,"column":28},"generated":{"line":1,"column":221}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":15,"column":28},"generated":{"line":1,"column":223}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":15,"column":28},"generated":{"line":1,"column":225}},{"source":"../../src/helpers/withDecimals.js","name":"amountBn","original":{"line":15,"column":37},"generated":{"line":1,"column":235}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":15,"column":47},"generated":{"line":1,"column":238}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":15,"column":47},"generated":{"line":1,"column":240}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":15,"column":47},"generated":{"line":1,"column":242}},{"source":"../../src/helpers/withDecimals.js","name":"decimals","original":{"line":15,"column":54},"generated":{"line":1,"column":250}},{"source":"../../src/helpers/withDecimals.js","name":"decimals","original":{"line":15,"column":72},"generated":{"line":1,"column":254}},{"source":"../../src/helpers/withDecimals.js","name":null,"original":{"line":15,"column":28},"generated":{"line":1,"column":257}}],"sources":{"../../src/helpers/withDecimals.js":"import { BigNumber } from 'ethers'\nimport { formatBN, tenPow } from './lib/formatBN'\n\nexport default () =>\n  /**\n   * Format an numerical amount with its decimals\n   *\n   * @param {*} amount The absolute amount, without any decimals.\n   * @param decimals The number of decimal places to format to. Defaults to 18.\n   * @return {Promise<radspec/evaluator/TypedValue>}\n   */\n  async (amount, decimals = 18) => {\n    const amountBn = BigNumber.from(amount)\n\n    const formattedAmount = formatBN(amountBn, tenPow(decimals), Number(decimals), false)\n\n    return {\n      type: 'string',\n      value: formattedAmount\n    }\n  }\n"},"lineCount":null}},"error":null,"hash":"b16ce671071fba6603b6d29328f9f84c","cacheData":{"env":{}}}