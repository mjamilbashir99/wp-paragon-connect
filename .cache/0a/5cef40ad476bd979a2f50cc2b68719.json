{"id":"node_modules/@aragon/connect-core/dist/utils/app.js","dependencies":[{"name":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-core\\dist\\utils\\app.js.map","includedInParent":true,"mtime":1594248789000},{"name":"C:\\xampp\\htdocs\\test_wp\\package.json","includedInParent":true,"mtime":1595855422975},{"name":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-core\\package.json","includedInParent":true,"mtime":1595838173215},{"name":"ethers","loc":{"line":4,"column":25},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-core\\dist\\utils\\app.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\ethers\\dist\\ethers.umd.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findAppMethodFromIntent = exports.validateMethod = exports.isFullMethodSignature = exports.apmAppId = void 0;\nconst ethers_1 = require(\"ethers\");\nexports.apmAppId = (appName) => ethers_1.ethers.utils.namehash(`${appName}.aragonpm.eth`);\n// Is the given method a full signature, e.g. 'foo(arg1,arg2,...)'\nexports.isFullMethodSignature = (methodSignature) => {\n    return (Boolean(methodSignature) &&\n        methodSignature.includes('(') &&\n        methodSignature.includes(')'));\n};\nfunction validateMethod(destination, methodSignature, destinationApp) {\n    const methods = destinationApp.intents;\n    if (!methods) {\n        throw new Error(`No functions specified in artifact for ${destination}`);\n    }\n    // Find the relevant method information\n    const method = methods.find(method => exports.isFullMethodSignature(methodSignature)\n        ? method.sig === methodSignature\n        : // If the full signature isn't given, just select the first overload declared\n            method.sig.split('(')[0] === methodSignature);\n    if (!method) {\n        throw new Error(`No method named ${methodSignature} on ${destination}`);\n    }\n    return method;\n}\nexports.validateMethod = validateMethod;\n/**\n * Find the method descriptor corresponding to the data component of a\n * transaction sent to `app`.\n *\n * @param  {Object} app App artifact\n * @param  {Object} data Data component of a transaction to app\n * @return {Object|void} Method with radspec notice and function signature, or undefined if none was found\n */\nfunction findAppMethodFromIntent(app, transaction) {\n    const methodId = transaction.data.substring(0, 10);\n    const checkMethodSignature = (siganture) => {\n        // Hash signature with Ethereum Identity and silce bytes\n        const sigHash = ethers_1.ethers.utils.hexDataSlice(ethers_1.ethers.utils.id(siganture), 0, 4);\n        return sigHash === methodId;\n    };\n    const { deprecatedIntents, intents } = app || {};\n    let method;\n    // First try to find the method in the current functions\n    if (Array.isArray(intents)) {\n        method = intents.find(method => checkMethodSignature(method.sig));\n    }\n    if (!method) {\n        // The current functions didn't have it; try with each deprecated version's functions\n        const deprecatedFunctionsFromVersions = Object.values(deprecatedIntents || {});\n        if (deprecatedFunctionsFromVersions.every(Array.isArray)) {\n            // Flatten all the deprecated functions\n            const allDeprecatedFunctions = [].concat(...deprecatedFunctionsFromVersions);\n            method = allDeprecatedFunctions.find(method => checkMethodSignature(method.sig));\n        }\n    }\n    return method;\n}\nexports.findAppMethodFromIntent = findAppMethodFromIntent;\n"},"sourceMaps":{"js":{"version":3,"file":"app.js","sourceRoot":"","sources":["../../src/utils/app.ts"],"names":[],"mappings":";;;AAAA,mCAA+B;AAMlB,QAAA,QAAQ,GAAG,CAAC,OAAe,EAAU,EAAE,CAClD,eAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,OAAO,eAAe,CAAC,CAAA;AAElD,kEAAkE;AACrD,QAAA,qBAAqB,GAAG,CAAC,eAAuB,EAAW,EAAE;IACxE,OAAO,CACL,OAAO,CAAC,eAAe,CAAC;QACxB,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC;QAC7B,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,CAC9B,CAAA;AACH,CAAC,CAAA;AAED,SAAgB,cAAc,CAC5B,WAAmB,EACnB,eAAuB,EACvB,cAAmB;IAEnB,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAA;IACtC,IAAI,CAAC,OAAO,EAAE;QACZ,MAAM,IAAI,KAAK,CAAC,0CAA0C,WAAW,EAAE,CAAC,CAAA;KACzE;IAED,uCAAuC;IACvC,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CACnC,6BAAqB,CAAC,eAAe,CAAC;QACpC,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,eAAe;QAChC,CAAC,CAAC,6EAA6E;YAC7E,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,eAAe,CACjD,CAAA;IACD,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,IAAI,KAAK,CAAC,mBAAmB,eAAe,OAAO,WAAW,EAAE,CAAC,CAAA;KACxE;IAED,OAAO,MAAM,CAAA;AACf,CAAC;AAtBD,wCAsBC;AAED;;;;;;;GAOG;AACH,SAAgB,uBAAuB,CACrC,GAAQ,EACR,WAAmC;IAEnC,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;IAElD,MAAM,oBAAoB,GAAG,CAAC,SAAiB,EAAW,EAAE;QAC1D,wDAAwD;QACxD,MAAM,OAAO,GAAG,eAAM,CAAC,KAAK,CAAC,YAAY,CAAC,eAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QAC3E,OAAO,OAAO,KAAK,QAAQ,CAAA;IAC7B,CAAC,CAAA;IAED,MAAM,EAAE,iBAAiB,EAAE,OAAO,EAAE,GAAG,GAAG,IAAI,EAAE,CAAA;IAEhD,IAAI,MAAM,CAAA;IACV,wDAAwD;IACxD,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC1B,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;KAClE;IAED,IAAI,CAAC,MAAM,EAAE;QACX,qFAAqF;QACrF,MAAM,+BAA+B,GAAG,MAAM,CAAC,MAAM,CACnD,iBAAiB,IAAI,EAAE,CACxB,CAAA;QACD,IAAI,+BAA+B,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YACxD,uCAAuC;YACvC,MAAM,sBAAsB,GAAI,EAAkB,CAAC,MAAM,CACvD,GAAG,+BAA+B,CACnC,CAAA;YACD,MAAM,GAAG,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAC5C,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,CACjC,CAAA;SACF;KACF;IAED,OAAO,MAAM,CAAA;AACf,CAAC;AArCD,0DAqCC","sourcesContent":[null]}},"error":null,"hash":"21304d181ca790f64282260136a04c93","cacheData":{"env":{}}}