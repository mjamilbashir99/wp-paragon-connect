{"id":"node_modules/@aragon/connect-core/dist/utils/path/decodePath.js","dependencies":[{"name":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\decodePath.js.map","includedInParent":true,"mtime":1594248789000},{"name":"C:\\xampp\\htdocs\\test_wp\\package.json","includedInParent":true,"mtime":1595855422975},{"name":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-core\\package.json","includedInParent":true,"mtime":1595838173215},{"name":"../callScript","loc":{"line":4,"column":29},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\decodePath.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-core\\dist\\utils\\callScript.js"},{"name":"../forwarding","loc":{"line":5,"column":29},"parent":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\decodePath.js","resolved":"C:\\xampp\\htdocs\\test_wp\\node_modules\\@aragon\\connect-core\\dist\\utils\\forwarding.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeTransactionPath = void 0;\nconst callScript_1 = require(\"../callScript\");\nconst forwarding_1 = require(\"../forwarding\");\n/**\n * Decodes an EVM callscript and returns the transaction path it describes.\n *\n * @return An array of Ethereum transactions that describe each step in the path\n */\nfunction decodeTransactionPath(script) {\n    // In the future we may support more EVMScripts, but for now let's just assume we're only\n    // dealing with call scripts\n    if (!callScript_1.isCallScript(script)) {\n        throw new Error(`Script could not be decoded: ${script}`);\n    }\n    const path = callScript_1.decodeCallScript(script);\n    return path.reduce((decodeSegments, segment) => {\n        const { data } = segment;\n        let children;\n        if (forwarding_1.isValidForwardCall(data)) {\n            const forwardedEvmScript = forwarding_1.parseForwardCall(data);\n            try {\n                children = decodeTransactionPath(forwardedEvmScript);\n                // eslint-disable-next-line no-empty\n            }\n            catch (err) { }\n        }\n        return decodeSegments.concat({ ...segment, children });\n    }, []);\n}\nexports.decodeTransactionPath = decodeTransactionPath;\n"},"sourceMaps":{"js":{"version":3,"file":"decodePath.js","sourceRoot":"","sources":["../../../src/utils/path/decodePath.ts"],"names":[],"mappings":";;;AAAA,8CAA8D;AAC9D,8CAAoE;AAOpE;;;;GAIG;AACH,SAAgB,qBAAqB,CACnC,MAAc;IAEd,yFAAyF;IACzF,4BAA4B;IAC5B,IAAI,CAAC,yBAAY,CAAC,MAAM,CAAC,EAAE;QACzB,MAAM,IAAI,KAAK,CAAC,gCAAgC,MAAM,EAAE,CAAC,CAAA;KAC1D;IAED,MAAM,IAAI,GAAG,6BAAgB,CAAC,MAAM,CAAC,CAAA;IAErC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,OAAO,EAAE,EAAE;QAC7C,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAA;QAExB,IAAI,QAAQ,CAAA;QACZ,IAAI,+BAAkB,CAAC,IAAI,CAAC,EAAE;YAC5B,MAAM,kBAAkB,GAAG,6BAAgB,CAAC,IAAI,CAAC,CAAA;YAEjD,IAAI;gBACF,QAAQ,GAAG,qBAAqB,CAAC,kBAAkB,CAAC,CAAA;gBACpD,oCAAoC;aACrC;YAAC,OAAO,GAAG,EAAE,GAAE;SACjB;QAED,OAAO,cAAc,CAAC,MAAM,CAAC,EAAE,GAAG,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAA;IACxD,CAAC,EAAE,EAA+B,CAAC,CAAA;AACrC,CAAC;AA1BD,sDA0BC","sourcesContent":[null]}},"error":null,"hash":"ad2985b7e94f2bdfa6075feff9b8f497","cacheData":{"env":{}}}