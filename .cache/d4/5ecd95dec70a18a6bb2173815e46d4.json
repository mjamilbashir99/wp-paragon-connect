{"id":"node_modules/@aragon/connect-core/dist/transactions/TransactionIntent.js","dependencies":[{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\transactions\\TransactionIntent.js.map","includedInParent":true,"mtime":1594248789000},{"name":"C:\\xampp\\htdocs\\aragon-connect\\package.json","includedInParent":true,"mtime":1595855422975},{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\package.json","includedInParent":true,"mtime":1595838173215},{"name":"./TransactionPath","loc":{"line":20,"column":50},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\transactions\\TransactionIntent.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\transactions\\TransactionPath.js"},{"name":"../utils/path/calculatePath","loc":{"line":21,"column":32},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\transactions\\TransactionIntent.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\path\\calculatePath.js"},{"name":"../utils/descriptions","loc":{"line":22,"column":31},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\transactions\\TransactionIntent.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\@aragon\\connect-core\\dist\\utils\\descriptions.js"}],"generated":{"js":"\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _org, _provider;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TransactionPath_1 = __importDefault(require(\"./TransactionPath\"));\nconst calculatePath_1 = require(\"../utils/path/calculatePath\");\nconst descriptions_1 = require(\"../utils/descriptions\");\nclass TransactionIntent {\n    constructor(data, org, provider) {\n        _org.set(this, void 0);\n        _provider.set(this, void 0);\n        __classPrivateFieldSet(this, _org, org);\n        __classPrivateFieldSet(this, _provider, provider);\n        this.contractAddress = data.contractAddress;\n        this.functionArgs = data.functionArgs;\n        this.functionName = data.functionName;\n    }\n    async paths(account, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    options) {\n        const apps = await __classPrivateFieldGet(this, _org).apps();\n        const { forwardingFeePretransaction, path, } = await calculatePath_1.calculateTransactionPath(account, this.contractAddress, this.functionName, this.functionArgs, apps, __classPrivateFieldGet(this, _provider));\n        const describedPath = await descriptions_1.describeTransactionPath(path, apps, __classPrivateFieldGet(this, _provider));\n        return new TransactionPath_1.default({\n            apps: apps.filter(app => path\n                .map(transaction => transaction.to)\n                .some(address => address === app.address)),\n            destination: apps.find(app => app.address == this.contractAddress),\n            forwardingFeePretransaction,\n            transactions: describedPath,\n        });\n    }\n    async transactions(account, options) {\n        return (await this.paths(account, options)).transactions;\n    }\n}\nexports.default = TransactionIntent;\n_org = new WeakMap(), _provider = new WeakMap();\n"},"sourceMaps":{"js":{"version":3,"file":"TransactionIntent.js","sourceRoot":"","sources":["../../src/transactions/TransactionIntent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAEA,wEAA+C;AAG/C,+DAAsE;AACtE,wDAA+D;AAQ/D,MAAqB,iBAAiB;IAQpC,YACE,IAA2B,EAC3B,GAAiB,EACjB,QAAmC;QANrC,uBAAkB;QAClB,4BAAoC;QAOlC,uBAAA,IAAI,QAAQ,GAAG,EAAA;QACf,uBAAA,IAAI,aAAa,QAAQ,EAAA;QAEzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAA;QAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;IACvC,CAAC;IAED,KAAK,CAAC,KAAK,CACT,OAAe;IACf,6DAA6D;IAC7D,OAA0C;QAE1C,MAAM,IAAI,GAAG,MAAM,mCAAU,IAAI,EAAE,CAAA;QAEnC,MAAM,EACJ,2BAA2B,EAC3B,IAAI,GACL,GAAG,MAAM,wCAAwB,CAChC,OAAO,EACP,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,YAAY,EACjB,IAAI,0CAEL,CAAA;QAED,MAAM,aAAa,GAAG,MAAM,sCAAuB,CACjD,IAAI,EACJ,IAAI,0CAEL,CAAA;QAED,OAAO,IAAI,yBAAe,CAAC;YACzB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CACtB,IAAI;iBACD,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC;iBAClC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,KAAK,GAAG,CAAC,OAAO,CAAC,CAC5C;YACD,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,eAAe,CAAE;YACnE,2BAA2B;YAC3B,YAAY,EAAE,aAAa;SAC5B,CAAC,CAAA;IACJ,CAAC;IAED,KAAK,CAAC,YAAY,CAChB,OAAe,EACf,OAAyC;QAEzC,OAAO,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,YAAY,CAAA;IAC1D,CAAC;CACF;AAhED,oCAgEC","sourcesContent":[null]}},"error":null,"hash":"e7331ca841725e7a87c6378519c73c0b","cacheData":{"env":{}}}