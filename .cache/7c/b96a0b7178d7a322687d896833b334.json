{"id":"VwRv","dependencies":[{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\fromHex.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\xampp\\htdocs\\aragon-connect\\package.json","includedInParent":true,"mtime":1595838175389},{"name":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\package.json","includedInParent":true,"mtime":1595838173348},{"name":"ethers","loc":{"line":1,"column":111},"parent":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\radspec\\dist\\helpers\\fromHex.js","resolved":"C:\\xampp\\htdocs\\aragon-connect\\node_modules\\ethers\\dist\\ethers.umd.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=require(\"ethers\"),t=()=>(t,r=\"utf8\")=>({type:\"string\",value:\"number\"===r?e.BigNumber.from(t).toNumber():e.ethers.utils.toUtf8String(t)});exports.default=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/helpers/fromHex.js","name":null,"original":{"line":3,"column":15},"generated":{"line":1,"column":117}},{"source":"../../src/helpers/fromHex.js","name":null,"original":{"line":11,"column":2},"generated":{"line":1,"column":121}},{"source":"../../src/helpers/fromHex.js","name":"hex","original":{"line":11,"column":3},"generated":{"line":1,"column":122}},{"source":"../../src/helpers/fromHex.js","name":"to","original":{"line":11,"column":8},"generated":{"line":1,"column":124}},{"source":"../../src/helpers/fromHex.js","name":null,"original":{"line":11,"column":13},"generated":{"line":1,"column":126}},{"source":"../../src/helpers/fromHex.js","name":null,"original":{"line":11,"column":2},"generated":{"line":1,"column":136}},{"source":"../../src/helpers/fromHex.js","name":"type","original":{"line":12,"column":4},"generated":{"line":1,"column":137}},{"source":"../../src/helpers/fromHex.js","name":null,"original":{"line":12,"column":10},"generated":{"line":1,"column":142}},{"source":"../../src/helpers/fromHex.js","name":"value","original":{"line":13,"column":4},"generated":{"line":1,"column":151}},{"source":"../../src/helpers/fromHex.js","name":null,"original":{"line":14,"column":13},"generated":{"line":1,"column":157}},{"source":"../../src/helpers/fromHex.js","name":"to","original":{"line":14,"column":6},"generated":{"line":1,"column":168}},{"source":"../../src/helpers/fromHex.js","name":"BigNumber","original":{"line":15,"column":10},"generated":{"line":1,"column":170}},{"source":"../../src/helpers/fromHex.js","name":"BigNumber","original":{"line":15,"column":10},"generated":{"line":1,"column":172}},{"source":"../../src/helpers/fromHex.js","name":"from","original":{"line":15,"column":20},"generated":{"line":1,"column":182}},{"source":"../../src/helpers/fromHex.js","name":"hex","original":{"line":15,"column":25},"generated":{"line":1,"column":187}},{"source":"../../src/helpers/fromHex.js","name":"toNumber","original":{"line":15,"column":30},"generated":{"line":1,"column":190}},{"source":"../../src/helpers/fromHex.js","name":"ethers","original":{"line":16,"column":10},"generated":{"line":1,"column":201}},{"source":"../../src/helpers/fromHex.js","name":"ethers","original":{"line":16,"column":10},"generated":{"line":1,"column":203}},{"source":"../../src/helpers/fromHex.js","name":"utils","original":{"line":16,"column":17},"generated":{"line":1,"column":210}},{"source":"../../src/helpers/fromHex.js","name":"toUtf8String","original":{"line":16,"column":23},"generated":{"line":1,"column":216}},{"source":"../../src/helpers/fromHex.js","name":"hex","original":{"line":16,"column":36},"generated":{"line":1,"column":229}}],"sources":{"../../src/helpers/fromHex.js":"import { ethers, BigNumber } from 'ethers'\n\nexport default () =>\n  /**\n   * Returns the string representation of a given hex value\n   *\n   * @param {string} hex The hex string\n   * @param {string} [to='utf8'] The type to convert the hex from (supported types: 'utf8', 'number')\n   * @return {radspec/evaluator/TypedValue}\n   */\n  (hex, to = 'utf8') => ({\n    type: 'string',\n    value:\n      to === 'number'\n        ? BigNumber.from(hex).toNumber()\n        : ethers.utils.toUtf8String(hex)\n  })\n"},"lineCount":null}},"error":null,"hash":"1c8db377c62d49178b9372e590d46067","cacheData":{"env":{}}}